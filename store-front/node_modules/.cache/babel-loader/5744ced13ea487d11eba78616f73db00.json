{"ast":null,"code":"var _jsxFileName = \"/Users/tdrdimov/gogoproj/my-project/store-front/src/pages/StoreFront.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = gql`\n  query getProducts {\n    products {\n      data {\n        attributes {\n          price\n          name\n          description\n          slug\n          image {\n            data {\n              attributes {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst categories = gql`\n  query getCategories {\n    categories {\n      data {\n        attributes {\n          name\n          slug\n        }\n      }\n    }\n  }\n`;\nexport default function StoreFront(props) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(categories); // const cats = useQuery(categories)\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  console.log(data.categories);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 9,\n        spacing: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StoreFront, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = StoreFront;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreFront\");","map":{"version":3,"names":["React","Link","useQuery","gql","Box","Grid","Card","CardActions","CardContent","CardMedia","Button","Typography","List","ListItem","ListItemButton","ListItemText","products","categories","StoreFront","props","loading","error","data","console","log","flexGrow","display"],"sources":["/Users/tdrdimov/gogoproj/my-project/store-front/src/pages/StoreFront.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\n\nconst products = gql`\n  query getProducts {\n    products {\n      data {\n        attributes {\n          price\n          name\n          description\n          slug\n          image {\n            data {\n              attributes {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst categories = gql`\n  query getCategories {\n    categories {\n      data {\n        attributes {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n\nexport default function StoreFront(props) {\n  const { loading, error, data } = useQuery(categories)\n  // const cats = useQuery(categories)\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>{error}</p>\n  console.log(data.categories)\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <Grid item xs={3} style={{ display: 'flex' }}>\n          <List>\n            {/* {data.categories.data.map((cat, ind) =>\n              <ListItem key={ind}>\n                <ListItemButton>\n                  <ListItemText primary={cat.name} />\n                </ListItemButton>\n              </ListItem>\n            )} */}\n          </List>\n        </Grid>\n        <Grid container item xs={9} spacing={3}>\n          {/* {data.products.data.map(prd =>\n            <Grid key={prd.attributes.slug} item xs={3} style={{ display: 'flex' }}>\n              <Card style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n                <CardMedia\n                  component=\"img\"\n                  alt={prd.attributes.slug}\n                  height=\"140\"\n                  image={`${props.baseURL}${prd.attributes.image.data ? prd.attributes.image.data.attributes.url : ''}`}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    {prd.attributes.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {prd.attributes.description}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\">Buy Now</Button>\n                  <Link to={`/product/${prd.attributes.slug}`}>\n                    <Button size=\"small\">Learn More</Button>\n                  </Link>\n                </CardActions>\n              </Card>\n            </Grid>\n          )} */}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,QAAQ,GAAGb,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAsBA,MAAMc,UAAU,GAAGd,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,eAAe,SAASe,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACxC,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BpB,QAAQ,CAACe,UAAD,CAAzC,CADwC,CAExC;;EAEA,IAAIG,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO;IAAA,UAAIA;EAAJ;IAAA;IAAA;IAAA;EAAA,QAAP;EACXE,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,UAAjB;EACA,oBACE,QAAC,GAAD;IAAK,EAAE,EAAE;MAAEQ,QAAQ,EAAE;IAAZ,CAAT;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,CAAzB;MAA4B,UAAU,EAAC,SAAvC;MAAA,wBACE,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAkB,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAX,CAAzB;QAAA,uBACE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAYE,QAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,IAAI,MAApB;QAAqB,EAAE,EAAE,CAAzB;QAA4B,OAAO,EAAE;MAArC;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD;;GApDuBR,U;UACWhB,Q;;;KADXgB,U"},"metadata":{},"sourceType":"module"}