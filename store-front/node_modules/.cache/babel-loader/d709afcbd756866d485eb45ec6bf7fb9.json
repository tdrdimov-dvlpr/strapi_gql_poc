{"ast":null,"code":"var _jsxFileName = \"/Users/tdrdimov/gogoproj/my-project/store-front/src/pages/Category.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = gql`\n query GetCategoryBySlug($slug: String) {\n  categories(filters:{slug: {eq: $slug}}) {\n    data {\n      attributes {\n        name\n        products {\n          data {\n            attributes {\n              price\n              name\n              description\n              slug\n              image {\n                data {\n                  attributes {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\nexport default function Category(props) {\n  _s();\n\n  const {\n    slug\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(categories, {\n    variables: {\n      slug\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return console.log('!!!!!!!!!!', error);\n  console.log(data.categories.data);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"bDHUOOVV2fzIJ5LCEmIhOTn6i/A=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useParams","useQuery","gql","Link","Box","Grid","Card","CardActions","CardContent","CardMedia","Button","Typography","categories","Category","props","slug","loading","error","data","variables","console","log","flexGrow"],"sources":["/Users/tdrdimov/gogoproj/my-project/store-front/src/pages/Category.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst categories = gql`\n query GetCategoryBySlug($slug: String) {\n  categories(filters:{slug: {eq: $slug}}) {\n    data {\n      attributes {\n        name\n        products {\n          data {\n            attributes {\n              price\n              name\n              description\n              slug\n              image {\n                data {\n                  attributes {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default function Category(props) {\n  const { slug } = useParams()\n  const { loading, error, data } = useQuery(categories, {\n    variables: { slug }\n  })\n\n  if (loading) return <p>Loading...</p>\n  if (error) return console.log('!!!!!!!!!!', error)\n  console.log(data.categories.data)\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      \n    </Box>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,UAAU,GAAGV,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;AA6BA,eAAe,SAASW,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACtC,MAAM;IAAEC;EAAF,IAAWf,SAAS,EAA1B;EACA,MAAM;IAAEgB,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BjB,QAAQ,CAACW,UAAD,EAAa;IACpDO,SAAS,EAAE;MAAEJ;IAAF;EADyC,CAAb,CAAzC;EAIA,IAAIC,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIC,KAAJ,EAAW,OAAOG,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAA1B,CAAP;EACXG,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACN,UAAL,CAAgBM,IAA5B;EACA,oBACE,QAAC,GAAD;IAAK,EAAE,EAAE;MAAEI,QAAQ,EAAE;IAAZ;EAAT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAduBT,Q;UACLb,S,EACgBC,Q;;;KAFXY,Q"},"metadata":{},"sourceType":"module"}